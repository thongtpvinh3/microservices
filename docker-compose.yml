version: '3.7'

services:
  eureka-server:
    image: nguyenddthong/eureka-server:latest
    container_name: eureka-server
    hostname: eureka-server
    ports:
      - "8761:8761"
    restart: always
    environment:
      server.port: 8761
      eureka.instance.hostname: eureka-server
    networks:
      - microservices

  db:
    image: postgres:latest
    container_name: db
    hostname: db
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: thong
      POSTGRES_PASSWORD: 123456
    networks:
      - microservices

  db2:
    image: postgres:latest
    container_name: db2
    hostname: db2
    ports:
      - "5433:5432"
    restart: always
    environment:
      POSTGRES_DB: book
      POSTGRES_USER: thong
      POSTGRES_PASSWORD: 123456
    networks:
      - microservices

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - microservices

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "mail"
    networks:
      - microservices

  user-service:
    image: nguyenddthong/user-service:latest
    container_name: user-service
    hostname: user-service
    ports:
      - "8082:8082"
    restart: always
    depends_on:
      - eureka-server
      - kafka
      - db
    environment:
      server.port: 8082
      spring.datasource.url: jdbc:postgresql://db:5432/postgres
      spring.datasource.username: thong
      spring.datasource.password: 123456
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka
      spring.kafka.bootstrap-servers: kafka:9092
    networks:
      - microservices

  book-service:
    image: nguyenddthong/book-service:latest
    container_name: book-service
    restart: always
    ports:
      - "8083:8083"
    environment:
      server.port: 8083
      spring.datasource.url: jdbc:postgresql://db2:5432/postgres
      spring.datasource.username: thong
      spring.datasource.password: 123456
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka
    depends_on:
      - db2
      - eureka-server
    networks:
      - microservices

  notification-service:
    image: nguyenddthong/notification-service:latest
    container_name: notification-service
    restart: always
    depends_on:
      - kafka
      - eureka-server
    ports:
      - "8084:8084"
    environment:
      server.port: 8084
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka/
      spring.kafka.bootstrap-servers: kafka:9092
    networks:
      - microservices

  api-gateway:
    image: nguyenddthong/api-gateway:latest
    container_name: api-gateway
    restart: always
    depends_on:
      - eureka-server
    ports:
      - "8762:8762"
    environment:
      server.port: 8762
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka/
    networks:
      - microservices

networks:
  microservices:
    driver: bridge